---
AWSTemplateFormatVersion: 2010-09-09


Description: >

  This template deploys a VPC, with a pair of frontend and application subnets spread
  across two Availability Zones. It deploys an Internet Gateway, with a default
  route on the frontend subnets. It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the application subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones.

  Finally, it deploys a pair of example ECS services from containers published in
  Amazon EC2 Container Registry (Amazon ECR).

Parameters:
  LaunchType:
    Type: String
    Default: Fargate
    AllowedValues:
      - Fargate
      - EC2
    Description: >
      The launch type for your service. Selecting EC2 will create an Auto
      Scaling group of t2.micro instances for your cluster. See
      https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html
      to learn more about launch types.

Conditions:
  EC2: !Equals [ !Ref LaunchType, "EC2" ]

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/miyamoto-ecs-refarch-cloudformation/infrastructure/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        FrontendSubnet1CIDR: 10.180.8.0/21
        FrontendSubnet2CIDR: 10.180.16.0/21
        ApplicationSubnet1CIDR: 10.180.24.0/21
        ApplicationSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/miyamoto-ecs-refarch-cloudformation/infrastructure/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/miyamoto-ecs-refarch-cloudformation/infrastructure/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        LaunchType: !Ref LaunchType
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.FrontendSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/miyamoto-ecs-refarch-cloudformation/infrastructure/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        LaunchType: !Ref LaunchType
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.ApplicationSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        InstanceType: t3.small
        ClusterSize: 2

  LifecycleHook:
    Condition: EC2
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/miyamoto-ecs-refarch-cloudformation/infrastructure/lifecyclehook.yaml
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

  ProductService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/miyamoto-ecs-refarch-cloudformation/services/product-service.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        ApplicationSubnets: !GetAtt VPC.Outputs.ApplicationSubnets
        SourceSecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
        Cluster: !GetAtt ECS.Outputs.Cluster
        LaunchType: !Ref LaunchType
        DesiredCount: 2
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /products

  WebsiteService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/miyamoto-ecs-refarch-cloudformation/services/website-service.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        ApplicationSubnets: !GetAtt VPC.Outputs.ApplicationSubnets
        SourceSecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
        Cluster: !GetAtt ECS.Outputs.Cluster
        LaunchType: !Ref LaunchType
        DesiredCount: 2
        ProductServiceUrl: !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "products"]]
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /
        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole

#  ProductServiceDeploymentPipeline:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://s3.amazonaws.com/miyamoto-ecs-refarch-cloudformation/infrastructure/deployment-pipeline.yaml
#      Parameters:
#        Cluster: !GetAtt ECS.Outputs.Cluster
#        Service: !GetAtt ProductService.Outputs.Service

#  WebsiteServiceDeploymentPipeline:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://s3.amazonaws.com/miyamoto-ecs-refarch-cloudformation/infrastructure/deployment-pipeline.yaml
#      Parameters:
#        Cluster: !GetAtt ECS.Outputs.Cluster
#        Service: !GetAtt WebsiteService.Outputs.Service

Outputs:
  ProductServiceUrl:
    Description: The URL endpoint for the product service
    Value: !Join ["/", [!GetAtt ALB.Outputs.LoadBalancerUrl, "products"]]

  WebsiteServiceUrl:
    Description: The URL endpoint for the website service
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]]
